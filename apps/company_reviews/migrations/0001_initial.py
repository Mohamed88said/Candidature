# Generated by Django 5.2.6 on 2025-10-06 16:16

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'entreprise")),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('industry', models.CharField(blank=True, max_length=100, verbose_name="Secteur d'activité")),
                ('size', models.CharField(blank=True, max_length=50, verbose_name="Taille de l'entreprise")),
                ('founded_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Année de fondation')),
                ('headquarters', models.CharField(blank=True, max_length=200, verbose_name='Siège social')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('logo', models.ImageField(blank=True, upload_to='companies/logos/', verbose_name='Logo')),
                ('cover_image', models.ImageField(blank=True, upload_to='companies/covers/', verbose_name='Image de couverture')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Vérifiée')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
            ],
            options={
                'verbose_name': 'Entreprise',
                'verbose_name_plural': 'Entreprises',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name="Nom de l'avantage")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('category', models.CharField(max_length=100, verbose_name='Catégorie')),
                ('is_available', models.BooleanField(default=True, verbose_name='Disponible')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='company_reviews.company', verbose_name='Entreprise')),
            ],
            options={
                'verbose_name': "Avantage d'entreprise",
                'verbose_name_plural': "Avantages d'entreprises",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CompanyInterview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200, verbose_name='Poste')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Département')),
                ('interview_date', models.DateField(verbose_name="Date de l'entretien")),
                ('interview_type', models.CharField(max_length=100, verbose_name="Type d'entretien")),
                ('difficulty', models.CharField(choices=[('easy', 'Facile'), ('average', 'Moyen'), ('difficult', 'Difficile'), ('very_difficult', 'Très difficile')], max_length=20, verbose_name='Difficulté')),
                ('duration', models.PositiveIntegerField(verbose_name='Durée (minutes)')),
                ('interview_questions', models.TextField(verbose_name='Questions posées')),
                ('interview_process', models.TextField(verbose_name="Processus d'entretien")),
                ('outcome', models.CharField(choices=[('accepted', 'Accepté'), ('rejected', 'Refusé'), ('no_response', 'Pas de réponse'), ('withdrew', 'Retiré')], max_length=20, verbose_name='Résultat')),
                ('offer_made', models.BooleanField(default=False, verbose_name='Offre faite')),
                ('offer_amount', models.PositiveIntegerField(blank=True, null=True, verbose_name="Montant de l'offre")),
                ('overall_experience', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Expérience globale')),
                ('pros', models.TextField(verbose_name='Points positifs')),
                ('cons', models.TextField(verbose_name='Points négatifs')),
                ('advice', models.TextField(blank=True, verbose_name='Conseils')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Anonyme')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='company_reviews.company', verbose_name='Entreprise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_experiences', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Expérience d'entretien",
                'verbose_name_plural': "Expériences d'entretien",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='companies/photos/', verbose_name='Photo')),
                ('caption', models.CharField(blank=True, max_length=200, verbose_name='Légende')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvée')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='company_reviews.company', verbose_name='Entreprise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_photos', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Photo d'entreprise",
                'verbose_name_plural': "Photos d'entreprises",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200, verbose_name='Poste occupé')),
                ('employment_status', models.CharField(choices=[('current', 'Employé actuel'), ('former', 'Ancien employé'), ('contractor', 'Prestataire'), ('intern', 'Stagiaire'), ('other', 'Autre')], max_length=20, verbose_name="Statut d'emploi")),
                ('employment_start_date', models.DateField(verbose_name='Date de début')),
                ('employment_end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('is_current_employee', models.BooleanField(default=False, verbose_name='Employé actuel')),
                ('overall_rating', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note globale')),
                ('work_life_balance', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Équilibre vie professionnelle/personnelle')),
                ('salary_benefits', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Salaire et avantages')),
                ('job_security', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name="Sécurité de l'emploi")),
                ('management', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Management')),
                ('culture', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name="Culture d'entreprise")),
                ('career_opportunities', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Opportunités de carrière')),
                ('pros', models.TextField(verbose_name='Points positifs')),
                ('cons', models.TextField(verbose_name='Points négatifs')),
                ('advice_to_management', models.TextField(blank=True, verbose_name='Conseils à la direction')),
                ('would_recommend', models.BooleanField(verbose_name='Recommanderait cette entreprise')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Anonyme')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='company_reviews.company', verbose_name='Entreprise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Avis sur l'entreprise",
                'verbose_name_plural': 'Avis sur les entreprises',
                'ordering': ['-created_at'],
                'unique_together': {('company', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CompanySalary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200, verbose_name='Poste')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Département')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Localisation')),
                ('base_salary', models.PositiveIntegerField(verbose_name='Salaire de base')),
                ('bonus', models.PositiveIntegerField(default=0, verbose_name='Prime')),
                ('total_compensation', models.PositiveIntegerField(verbose_name='Rémunération totale')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('employment_type', models.CharField(max_length=50, verbose_name="Type d'emploi")),
                ('experience_level', models.CharField(max_length=50, verbose_name="Niveau d'expérience")),
                ('years_at_company', models.PositiveIntegerField(verbose_name="Années dans l'entreprise")),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approuvé')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Anonyme')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salaries', to='company_reviews.company', verbose_name='Entreprise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_reports', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Information salariale',
                'verbose_name_plural': 'Informations salariales',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField(verbose_name='Réponse')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('company_representative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_responses', to=settings.AUTH_USER_MODEL, verbose_name="Représentant de l'entreprise")),
                ('review', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_response', to='company_reviews.companyreview', verbose_name='Avis')),
            ],
            options={
                'verbose_name': "Réponse d'entreprise",
                'verbose_name_plural': "Réponses d'entreprises",
            },
        ),
        migrations.CreateModel(
            name='CompanyFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='company_reviews.company', verbose_name='Entreprise')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followed_companies', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Suivi d'entreprise",
                'verbose_name_plural': "Suivis d'entreprises",
                'unique_together': {('user', 'company')},
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpful',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField(verbose_name='Utile')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpful_votes', to='company_reviews.companyreview', verbose_name='Avis')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_helpful_votes', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Vote utile',
                'verbose_name_plural': 'Votes utiles',
                'unique_together': {('review', 'user')},
            },
        ),
    ]
