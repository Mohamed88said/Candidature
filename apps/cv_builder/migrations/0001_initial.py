# Generated by Django 5.2.6 on 2025-10-06 15:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CVTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du modèle')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('category', models.CharField(choices=[('modern', 'Moderne'), ('classic', 'Classique'), ('creative', 'Créatif'), ('minimalist', 'Minimaliste'), ('professional', 'Professionnel'), ('academic', 'Académique')], max_length=20, verbose_name='Catégorie')),
                ('preview_image', models.ImageField(upload_to='cv_templates/previews/', verbose_name='Image de prévisualisation')),
                ('template_file', models.FileField(upload_to='cv_templates/files/', verbose_name='Fichier de modèle')),
                ('css_file', models.FileField(upload_to='cv_templates/css/', verbose_name='Fichier CSS')),
                ('sections', models.JSONField(default=list, verbose_name='Sections disponibles')),
                ('layout_config', models.JSONField(default=dict, verbose_name='Configuration de mise en page')),
                ('color_scheme', models.JSONField(default=dict, verbose_name='Schéma de couleurs')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Modèle premium')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
            ],
            options={
                'verbose_name': 'Modèle de CV',
                'verbose_name_plural': 'Modèles de CV',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CVTemplateCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom de la catégorie')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Icône')),
                ('color', models.CharField(default='#007bff', max_length=7, verbose_name='Couleur')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
            ],
            options={
                'verbose_name': 'Catégorie de modèle de CV',
                'verbose_name_plural': 'Catégories de modèles de CV',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du CV')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('published', 'Publié'), ('archived', 'Archivé')], default='draft', max_length=20, verbose_name='Statut')),
                ('personal_info', models.JSONField(default=dict, verbose_name='Informations personnelles')),
                ('professional_summary', models.TextField(blank=True, verbose_name='Résumé professionnel')),
                ('experience', models.JSONField(default=list, verbose_name='Expériences professionnelles')),
                ('education', models.JSONField(default=list, verbose_name='Formation')),
                ('skills', models.JSONField(default=list, verbose_name='Compétences')),
                ('projects', models.JSONField(default=list, verbose_name='Projets')),
                ('languages', models.JSONField(default=list, verbose_name='Langues')),
                ('certifications', models.JSONField(default=list, verbose_name='Certifications')),
                ('references', models.JSONField(default=list, verbose_name='Références')),
                ('additional_sections', models.JSONField(default=list, verbose_name='Sections supplémentaires')),
                ('custom_colors', models.JSONField(default=dict, verbose_name='Couleurs personnalisées')),
                ('custom_fonts', models.JSONField(default=dict, verbose_name='Polices personnalisées')),
                ('layout_settings', models.JSONField(default=dict, verbose_name='Paramètres de mise en page')),
                ('is_public', models.BooleanField(default=False, verbose_name='Public')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de téléchargements')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cvs', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cvs', to='cv_builder.cvtemplate', verbose_name='Modèle')),
            ],
            options={
                'verbose_name': 'CV',
                'verbose_name_plural': 'CVs',
                'ordering': ['-last_modified'],
            },
        ),
        migrations.CreateModel(
            name='CVExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_format', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word (DOCX)'), ('html', 'HTML'), ('txt', 'Texte')], max_length=10, verbose_name="Format d'export")),
                ('file_path', models.CharField(max_length=500, verbose_name='Chemin du fichier')),
                ('file_size', models.PositiveIntegerField(verbose_name='Taille du fichier (bytes)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exports', to='cv_builder.cv', verbose_name='CV')),
            ],
            options={
                'verbose_name': 'Export de CV',
                'verbose_name_plural': 'Exports de CV',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CVSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_type', models.CharField(choices=[('custom', 'Personnalisée'), ('achievements', 'Réalisations'), ('publications', 'Publications'), ('volunteer', 'Bénévolat'), ('interests', "Centres d'intérêt"), ('awards', 'Prix et distinctions')], default='custom', max_length=20, verbose_name='Type de section')),
                ('title', models.CharField(max_length=100, verbose_name='Titre de la section')),
                ('content', models.JSONField(default=list, verbose_name='Contenu de la section')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_sections', to='cv_builder.cv', verbose_name='CV')),
            ],
            options={
                'verbose_name': 'Section de CV',
                'verbose_name_plural': 'Sections de CV',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='CVShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_type', models.CharField(choices=[('public', 'Public'), ('private', 'Privé'), ('password', 'Protégé par mot de passe'), ('expiring', 'Expirant')], default='private', max_length=20, verbose_name='Type de partage')),
                ('share_url', models.CharField(max_length=255, unique=True, verbose_name='URL de partage')),
                ('password', models.CharField(blank=True, max_length=100, verbose_name='Mot de passe')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expire le')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de vues')),
                ('download_count', models.PositiveIntegerField(default=0, verbose_name='Nombre de téléchargements')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='cv_builder.cv', verbose_name='CV')),
            ],
            options={
                'verbose_name': 'Partage de CV',
                'verbose_name_plural': 'Partages de CV',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CVBuilderSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_save', models.BooleanField(default=True, verbose_name='Sauvegarde automatique')),
                ('auto_save_interval', models.PositiveIntegerField(default=30, verbose_name='Intervalle de sauvegarde (secondes)')),
                ('default_export_format', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word (DOCX)'), ('html', 'HTML'), ('txt', 'Texte')], default='pdf', max_length=10, verbose_name="Format d'export par défaut")),
                ('include_contact_info', models.BooleanField(default=True, verbose_name='Inclure les informations de contact')),
                ('include_photo', models.BooleanField(default=True, verbose_name='Inclure la photo')),
                ('default_share_type', models.CharField(choices=[('public', 'Public'), ('private', 'Privé'), ('password', 'Protégé par mot de passe'), ('expiring', 'Expirant')], default='private', max_length=20, verbose_name='Type de partage par défaut')),
                ('share_expiry_days', models.PositiveIntegerField(default=30, verbose_name='Durée de partage (jours)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cv_builder_settings', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
                ('default_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cv_builder.cvtemplate', verbose_name='Modèle par défaut')),
            ],
            options={
                'verbose_name': 'Paramètres du constructeur de CV',
                'verbose_name_plural': 'Paramètres du constructeur de CV',
            },
        ),
        migrations.CreateModel(
            name='CVAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Vues')),
                ('downloads', models.PositiveIntegerField(default=0, verbose_name='Téléchargements')),
                ('shares', models.PositiveIntegerField(default=0, verbose_name='Partages')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='cv_builder.cv', verbose_name='CV')),
            ],
            options={
                'verbose_name': 'Analytics de CV',
                'verbose_name_plural': 'Analytics de CV',
                'ordering': ['-date'],
                'unique_together': {('cv', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CVFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 étoile'), (2, '2 étoiles'), (3, '3 étoiles'), (4, '4 étoiles'), (5, '5 étoiles')], verbose_name='Note')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('is_public', models.BooleanField(default=False, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='cv_builder.cv', verbose_name='CV')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cv_feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='Évaluateur')),
            ],
            options={
                'verbose_name': 'Commentaire de CV',
                'verbose_name_plural': 'Commentaires de CV',
                'ordering': ['-created_at'],
                'unique_together': {('cv', 'reviewer')},
            },
        ),
    ]
