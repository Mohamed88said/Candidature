# Generated by Django 4.2.7 on 2025-09-18 13:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('candidate', 'Candidat'), ('admin', 'Administrateur'), ('hr', 'Ressources Humaines')], default='candidate', max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CandidateProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'Féminin'), ('O', 'Autre')], max_length=1)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Célibataire'), ('married', 'Marié(e)'), ('divorced', 'Divorcé(e)'), ('widowed', 'Veuf/Veuve')], max_length=20)),
                ('nationality', models.CharField(blank=True, max_length=100)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('mobile_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(regex='^\\+?1?\\d{9,15}$')])),
                ('linkedin_url', models.URLField(blank=True)),
                ('website_url', models.URLField(blank=True)),
                ('current_position', models.CharField(blank=True, max_length=200)),
                ('current_company', models.CharField(blank=True, max_length=200)),
                ('years_of_experience', models.PositiveIntegerField(default=0, help_text='Calculé automatiquement')),
                ('years_of_relevant_experience', models.PositiveIntegerField(default=0, help_text='Expérience pertinente calculée')),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('availability_date', models.DateField(blank=True, null=True)),
                ('cv_file', models.FileField(blank=True, null=True, upload_to='cvs/')),
                ('cover_letter', models.FileField(blank=True, null=True, upload_to='cover_letters/')),
                ('willing_to_relocate', models.BooleanField(default=False)),
                ('preferred_work_type', models.CharField(blank=True, choices=[('full_time', 'Temps plein'), ('part_time', 'Temps partiel'), ('contract', 'Contrat'), ('freelance', 'Freelance'), ('internship', 'Stage')], max_length=50)),
                ('profile_completion', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil Candidat',
                'verbose_name_plural': 'Profils Candidats',
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('company', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('relationship', models.CharField(max_length=100)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Référence',
                'verbose_name_plural': 'Références',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('project_type', models.CharField(choices=[('professional', 'Professionnel'), ('personal', 'Personnel'), ('academic', 'Académique'), ('open_source', 'Open Source'), ('freelance', 'Freelance')], max_length=20)),
                ('status', models.CharField(choices=[('completed', 'Terminé'), ('in_progress', 'En cours'), ('paused', 'En pause'), ('cancelled', 'Annulé')], default='completed', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_ongoing', models.BooleanField(default=False)),
                ('technologies_used', models.TextField(blank=True)),
                ('role', models.CharField(blank=True, max_length=200)),
                ('team_size', models.PositiveIntegerField(blank=True, null=True)),
                ('project_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('demo_url', models.URLField(blank=True)),
                ('achievements', models.TextField(blank=True)),
                ('impact', models.TextField(blank=True, help_text='Impact business ou technique')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Projet',
                'verbose_name_plural': 'Projets',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('employment_type', models.CharField(choices=[('full_time', 'Temps plein'), ('part_time', 'Temps partiel'), ('contract', 'Contrat'), ('freelance', 'Freelance'), ('internship', 'Stage'), ('volunteer', 'Bénévolat'), ('apprenticeship', 'Apprentissage')], default='full_time', max_length=20)),
                ('company_size', models.CharField(blank=True, choices=[('startup', 'Startup (1-10)'), ('small', 'Petite (11-50)'), ('medium', 'Moyenne (51-200)'), ('large', 'Grande (201-1000)'), ('enterprise', 'Entreprise (1000+)')], max_length=20)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('remote_work', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_currency', models.CharField(default='EUR', max_length=3)),
                ('description', models.TextField()),
                ('achievements', models.TextField(blank=True)),
                ('technologies_used', models.TextField(blank=True, help_text='Technologies, outils, logiciels utilisés')),
                ('team_size', models.PositiveIntegerField(blank=True, help_text="Taille de l'équipe managée", null=True)),
                ('budget_managed', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='experiences', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Expérience',
                'verbose_name_plural': 'Expériences',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=200)),
                ('degree', models.CharField(max_length=200)),
                ('field_of_study', models.CharField(max_length=200)),
                ('degree_level', models.CharField(choices=[('high_school', 'Lycée'), ('bachelor', 'Licence/Bachelor'), ('master', 'Master'), ('phd', 'Doctorat'), ('certificate', 'Certificat'), ('diploma', 'Diplôme'), ('other', 'Autre')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('grade', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('issuing_organization', models.CharField(max_length=200)),
                ('issue_date', models.DateField()),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('credential_id', models.CharField(blank=True, max_length=100)),
                ('credential_url', models.URLField(blank=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Certification',
                'verbose_name_plural': 'Certifications',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('issuing_organization', models.CharField(max_length=200)),
                ('award_type', models.CharField(choices=[('professional', 'Professionnel'), ('academic', 'Académique'), ('industry', 'Industrie'), ('community', 'Communauté'), ('innovation', 'Innovation'), ('leadership', 'Leadership'), ('other', 'Autre')], max_length=20)),
                ('date_received', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('certificate_url', models.URLField(blank=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='awards', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Prix/Reconnaissance',
                'verbose_name_plural': 'Prix/Reconnaissances',
                'ordering': ['-date_received'],
            },
        ),
        migrations.CreateModel(
            name='SocialProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('linkedin', 'LinkedIn'), ('github', 'GitHub'), ('stackoverflow', 'Stack Overflow'), ('behance', 'Behance'), ('dribbble', 'Dribbble'), ('medium', 'Medium'), ('twitter', 'Twitter'), ('personal_website', 'Site personnel'), ('portfolio', 'Portfolio'), ('other', 'Autre')], max_length=20)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('url', models.URLField()),
                ('is_public', models.BooleanField(default=True)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_profiles', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Profil Social',
                'verbose_name_plural': 'Profils Sociaux',
                'unique_together': {('candidate', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level', models.CharField(choices=[('beginner', 'Débutant'), ('basic', 'Basique'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert'), ('master', 'Maître')], max_length=20)),
                ('category', models.CharField(choices=[('technical', 'Technique'), ('programming', 'Programmation'), ('framework', 'Framework'), ('database', 'Base de données'), ('cloud', 'Cloud'), ('devops', 'DevOps'), ('design', 'Design'), ('marketing', 'Marketing'), ('sales', 'Vente'), ('management', 'Management'), ('finance', 'Finance'), ('legal', 'Juridique'), ('soft', 'Soft Skills'), ('communication', 'Communication'), ('leadership', 'Leadership'), ('tool', 'Outil'), ('certification', 'Certification'), ('other', 'Autre')], max_length=20)),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('is_certified', models.BooleanField(default=False)),
                ('certification_name', models.CharField(blank=True, max_length=200)),
                ('last_used', models.DateField(blank=True, null=True)),
                ('proficiency_score', models.PositiveIntegerField(default=50, help_text='Score de 0 à 100')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Compétence',
                'verbose_name_plural': 'Compétences',
                'unique_together': {('candidate', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=100)),
                ('proficiency', models.CharField(choices=[('A1', 'A1 - Débutant'), ('A2', 'A2 - Élémentaire'), ('B1', 'B1 - Intermédiaire'), ('B2', 'B2 - Intermédiaire avancé'), ('C1', 'C1 - Avancé'), ('C2', 'C2 - Maîtrise'), ('native', 'Langue maternelle')], max_length=10)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='accounts.candidateprofile')),
            ],
            options={
                'verbose_name': 'Langue',
                'verbose_name_plural': 'Langues',
                'unique_together': {('candidate', 'language')},
            },
        ),
    ]
