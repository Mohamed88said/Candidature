# Generated by Django 5.2.6 on 2025-10-06 14:23

import cloudinary.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('applications', '0003_application_presentation_video_and_more'),
        ('jobs', '0003_job_job_description_file_alter_job_company_logo'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('room_type', models.CharField(choices=[('application', 'Candidature'), ('general', 'Général'), ('interview', 'Entretien'), ('follow_up', 'Suivi')], default='application', max_length=20)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('message_count', models.PositiveIntegerField(default=0)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('candidate_notifications', models.PositiveIntegerField(default=0)),
                ('recruiter_notifications', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms', to='applications.application')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms_as_candidate', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms', to='jobs.job')),
                ('last_message_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_messages', to=settings.AUTH_USER_MODEL)),
                ('recruiter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms_as_recruiter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Salle de Chat',
                'verbose_name_plural': 'Salles de Chat',
                'ordering': ['-last_message_at', '-created_at'],
                'unique_together': {('candidate', 'recruiter', 'job')},
            },
        ),
        migrations.CreateModel(
            name='ChatSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('sound_notifications', models.BooleanField(default=True)),
                ('theme', models.CharField(choices=[('light', 'Clair'), ('dark', 'Sombre'), ('auto', 'Automatique')], default='auto', max_length=20)),
                ('font_size', models.CharField(choices=[('small', 'Petit'), ('medium', 'Moyen'), ('large', 'Grand')], default='medium', max_length=20)),
                ('show_typing_indicator', models.BooleanField(default=True)),
                ('show_read_receipts', models.BooleanField(default=True)),
                ('auto_download_media', models.BooleanField(default=False)),
                ('show_online_status', models.BooleanField(default=True)),
                ('allow_direct_messages', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Paramètres de Chat',
                'verbose_name_plural': 'Paramètres de Chat',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Texte'), ('image', 'Image'), ('file', 'Fichier'), ('video', 'Vidéo'), ('audio', 'Audio'), ('system', 'Système')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('attachment', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True, verbose_name='raw')),
                ('is_edited', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('reactions', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='chat.message')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('spam', 'Spam'), ('harassment', 'Harcèlement'), ('inappropriate_content', 'Contenu inapproprié'), ('fake_profile', 'Profil faux'), ('other', 'Autre')], max_length=30)),
                ('description', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_reports_received', to=settings.AUTH_USER_MODEL)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_reports_made', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='chat.chatroom')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='chat.message')),
            ],
            options={
                'verbose_name': 'Signalement de Chat',
                'verbose_name_plural': 'Signalements de Chat',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('new_message', 'Nouveau message'), ('message_reaction', 'Réaction au message'), ('room_created', 'Nouvelle salle créée'), ('user_joined', 'Utilisateur rejoint'), ('user_left', 'Utilisateur parti')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_notifications', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.chatroom')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='chat.message')),
            ],
            options={
                'verbose_name': 'Notification de Chat',
                'verbose_name_plural': 'Notifications de Chat',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blocked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to=settings.AUTH_USER_MODEL)),
                ('blocker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Utilisateur Bloqué',
                'verbose_name_plural': 'Utilisateurs Bloqués',
                'unique_together': {('blocker', 'blocked')},
            },
        ),
        migrations.CreateModel(
            name='ChatParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_muted', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('is_online', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_participations', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='chat.chatroom')),
            ],
            options={
                'verbose_name': 'Participant au Chat',
                'verbose_name_plural': 'Participants au Chat',
                'unique_together': {('user', 'room')},
            },
        ),
    ]

